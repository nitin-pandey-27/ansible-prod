- name: Create a directory if it does not exist
  file:
    path: /root/k8s-hard-way/certs
    state: directory

- name: Create kube-proxy configuration file 
  shell: |
    cd /root/k8s-hard-way/certs
    export LOADBALANCER_ADDRESS=192.168.1.60
    /usr/local/bin/kubectl config set-cluster kubernetes-the-hard-way \
    --certificate-authority=ca.crt \
    --embed-certs=true \
    --server=https://${LOADBALANCER_ADDRESS}:6443 \
    --kubeconfig=kube-proxy.kubeconfig
    /usr/local/bin/kubectl config set-credentials system:kube-proxy \
    --client-certificate=kube-proxy.crt \
    --client-key=kube-proxy.key \
    --embed-certs=true \
    --kubeconfig=kube-proxy.kubeconfig
    /usr/local/bin/kubectl config set-context default \
    --cluster=kubernetes-the-hard-way \
    --user=system:kube-proxy \
    --kubeconfig=kube-proxy.kubeconfig
    /usr/local/bin/kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig

- name: Create kube-controller-manager configuration file
  shell: |
    cd /root/k8s-hard-way/certs
    export LOADBALANCER_ADDRESS=192.168.1.60
    /usr/local/bin/kubectl config set-cluster kubernetes-the-hard-way \
    --certificate-authority=ca.crt \
    --embed-certs=true \
    --server=https://127.0.0.1:6443 \
    --kubeconfig=kube-controller-manager.kubeconfig
    /usr/local/bin/kubectl config set-credentials system:kube-controller-manager \
    --client-certificate=kube-controller-manager.crt \
    --client-key=kube-controller-manager.key \
    --embed-certs=true \
    --kubeconfig=kube-controller-manager.kubeconfig
    /usr/local/bin/kubectl config set-context default \
    --cluster=kubernetes-the-hard-way \
    --user=system:kube-controller-manager \
    --kubeconfig=kube-controller-manager.kubeconfig
    /usr/local/bin/kubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig


- name: Create kube-scheduler configuration file
  shell: |
    cd /root/k8s-hard-way/certs
    export LOADBALANCER_ADDRESS=192.168.1.60
    /usr/local/bin/kubectl config set-cluster kubernetes-the-hard-way \
    --certificate-authority=ca.crt \
    --embed-certs=true \
    --server=https://127.0.0.1:6443 \
    --kubeconfig=kube-scheduler.kubeconfig
    /usr/local/bin/kubectl config set-credentials system:kube-scheduler \
    --client-certificate=kube-scheduler.crt \
    --client-key=kube-scheduler.key \
    --embed-certs=true \
    --kubeconfig=kube-scheduler.kubeconfig
    /usr/local/bin/kubectl config set-context default \
    --cluster=kubernetes-the-hard-way \
    --user=system:kube-scheduler \
    --kubeconfig=kube-scheduler.kubeconfig
    /usr/local/bin/kubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig


- name: Create kube-config for Admin user
  shell: | 
    cd /root/k8s-hard-way/certs
    export LOADBALANCER_ADDRESS=192.168.1.60
    /usr/local/bin/kubectl config set-cluster kubernetes-the-hard-way \
    --certificate-authority=ca.crt \
    --embed-certs=true \
    --server=https://127.0.0.1:6443 \
    --kubeconfig=admin.kubeconfig
    /usr/local/bin/kubectl config set-credentials admin \
    --client-certificate=admin.crt \
    --client-key=admin.key \
    --embed-certs=true \
    --kubeconfig=admin.kubeconfig
    /usr/local/bin/kubectl config set-context default \
    --cluster=kubernetes-the-hard-way \
    --user=admin \
    --kubeconfig=admin.kubeconfig
    /usr/local/bin/kubectl config use-context default --kubeconfig=admin.kubeconfig

- name: Remove encyption file if exists
  file:
   path: /root/k8s-hard-way/certs/encryption-config.yaml
   state: absent
  tags: ENCRYPTION_KEY-2

- name: Create encryption config file 
  shell: |
    head -c 32 /dev/urandom | base64
  register: ENCRYPTION_KEY
  tags: ENCRYPTION_KEY-2

- name: Create encryption Config File
  lineinfile:
    path: /root/k8s-hard-way/certs/encryption-config.yaml
    create: yes
    state: present
    line: |
     kind: EncryptionConfig
     apiVersion: v1
     resources:
     - resources:
       - secrets
       providers:
       - aescbc:
          keys:
          - name: key1
            secret: {{ENCRYPTION_KEY.stdout}}
       - identity: {}
  tags: ENCRYPTION_KEY-2
